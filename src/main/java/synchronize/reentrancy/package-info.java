/**
 * synchronized性质
 * 一、可重入性
 * 同一个线程外层函数获得锁之后，内层函数可以直接再次获取到该锁。
 * 优点：避免死锁，提升封装性。
 * 粒度是线程，而不是方法的调用
 * <p>
 * 二、不可中断性
 * 一旦这个锁已经被别人获得，如果我还想获得，我只能选择等待或阻塞，直到别的线程释放这个锁。
 * 如果别人永远不释放锁，那么我只能永远等待下去。
 * 相比之下，LOCK锁，可以拥有中断能力。
 * 第一，如果觉得等待时间太长，有权中断现在已经获得锁的线程的执行
 * 第二，如果我觉得等待时间太长，也可以退出
 */
package synchronize.reentrancy;