/**
 * 尤其需要考虑线程安全的情况有哪些？
 * 1. 访问共享的变量或资源，会有并发风险，比如对象的属性、静态变量、共享缓存、数据库等
 * 2. 所有依赖时序的操作，即使每一步操作都是线程安全的，还是存在并发问题：
 * * a.读修改写操作，一个线程读取了一个共享数据，并在此基础上更新数据
 * * b.一个线程读取了一个共享数据，并在此基础上进行下一步操作（如if）
 * 3. 不同的数据之间存在捆绑关系的时候：IP和端口号
 * 4. 我们使用其他类的时候，如果对方没有声明自己是线程安全的，那么大概率会存在并发问题
 */
package threadcoreknowledge.safeproblem;